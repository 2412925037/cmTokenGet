buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
apply plugin: 'com.android.application'
ext.keystorePath = "D:/andorid/zn.keystore";
ext.myVersion = "7"
android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.surprise.shuabasejoymenghull"
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        ndk{
            moduleName "getDevice"			//生成的so名字
            abiFilters "armeabi","armeabi-v7a"	//输出指定三种abi体系结构下的so库。目前可有可无。
            stl "stlport_static"
            ldLibs "log"   //android:assetManager  , jnigraphics:bitmap
            ldLibs +=file("libs/libcurl.a").toString()
//            cppFlags.add()
//            CFlags.add("-DLSB")
        }

    }

    signingConfigs{
        mySign{
            storeFile file(keystorePath)
            storePassword "tiantang00"
            keyAlias "zn_key"
            keyPassword "tiantang00"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.mySign
            minifyEnabled true
            proguardFiles  'proguard-rules.pro'
        }
    }
//    sourceSets {
//        main.jniLibs.srcDirs = ['libs']
//        main.jni.srcDirs = [] //disable automatic ndk-build
//    }

    applicationVariants.all { variant ->
        variant.buildConfigField "int", "myVersion",  myVersion
        variant.outputs.each { output ->
            if (output.zipAlign) {
                def file = output.outputFile
                def fileName = file.name.replace(".apk", /*"-" + defaultConfig.versionName +*/ "-" + myVersion + ".apk")
                output.outputFile = new File(file.parent, fileName)
            }
//
//            def file = output.packageApplication.outputFile
//            def fileName = file.name.replace(".apk", /*"-" + defaultConfig.versionName +*/ "-" + myVersion + ".apk")
//            output.packageApplication.outputFile = new File(file.parent, fileName)
        }
    }
}
//task ndkBuild(type: Exec) {
//        commandLine 'ndk-build', '-C', file('src/main').absolutePath
//}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
}
//ndk-build & copy /y ..\libs\armeabi\libgetDevice.so ..\..\..\libs\armeabi